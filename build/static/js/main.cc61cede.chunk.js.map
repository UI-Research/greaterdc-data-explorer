{"version":3,"sources":["constants/taxonomy.js","constants/filters.js","helpers/filters.js","constants/colors.js","lib/data.js","components/Filters.js","helpers/map.js","helpers/data_table.js","components/Map.js","components/DataTable.js","components/Modal.js","lib/classifiers.js","App.js","index.js"],"names":["geographies","topics","INDICATORS_BLACKLIST","geographyOptions","Object","keys","map","key","value","label","options","filterColumn","column","test","includes","blueColorRamp","dataSourceKey","geography","topic","rowKey","fetchDataSource","url","axios","get","then","response","headers","match","data","Error","fetchMetadataSource","indicatorLabel","indicator","metadata","find","e","NAME","LABEL","sortIndicators","indicatorOptions","cloneDeep","filter","sort","a","b","weborder","f","isNumeric","n","isNaN","parseFloat","isFinite","choroplethRows","year","row","timeframe","v","toString","parseInt","areaTransform","indc","choroplethColorStops","rows","steps","bucket","findIndex","step","color","hasNotesAndSources","level","item","h","formatNumber","truncated","replace","number","Number","isInteger","toFixed","Filters","state","tooltipLevel","tooltipItem","handleChange","name","opt","props","setFilter","window","setTimeout","node","document","querySelector","scrollTop","offsetTop","setTooltip","setState","renderOptions","type","selectedOption","notesAndSources","className","onClick","ev","preventDefault","stopPropagation","stopImmediatePropagation","this","filters","selectedFilters","clearFilters","console","log","tooltipCx","classnames","visible","tooltipContent","i","text","topicOptions","indicators","yearOptions","years","onClickOutside","dangerouslySetInnerHTML","__html","onChange","placeholder","valueRenderer","openOnClick","disabled","length","role","Component","shapefile","sourceLayer","areaKey","areaLabel","areaProps","TRACTCE","slice","join","ZIPCODE","NBH_NAMES","headerLabels","layers","id","paint","layout","visibility","Map","sources","choropleths","loadedSources","addSource","addLayers","forEach","layer","addLayer","source","on","areaLocked","area","toggleAreaLock","features","properties","setArea","newAreaProps","newArea","setChoropleth","colorStops","setPaintProperty","property","stops","default","setLayoutProperty","clearChoropleth","makeSourceVisible","handleMapData","sourceId","hasOwnProperty","isSourceLoaded","push","mapboxgl","accessToken","container","style","center","zoom","scrollZoom","disable","addControl","NavigationControl","showCompass","onLoad","nextProps","oldGeography","oldIndicator","oldYear","choroplethSteps","onAboutAppClick","stepsCount","largeValues","legendCx","height","onInfoClick","r","areaValue","_","backgroundColor","DataTable","scroller","canShowData","geographyType","reduce","all","currentIndicator","areaValues","areaRows","sortedUniq","currentYear","aggs","values","min","Math","max","avg","total","val","aggregates","cx","highlight","marginOfError","moe","rowMOE","colSpan","class","downloadURL","csvSourceURL","downloadName","ref","href","download","Modal","children","isOpen","onRequestClose","overlayCx","modalCx","times","Array","from","quantileIntervals","compactedValues","compact","perBucket","floor","sortedValues","intervals","filterObject","obj","predicate","App","dataSources","metadataSources","modalOpen","setSelectedFiltersFromQueryString","qs","parse","location","search","catch","message","setSearchFromFilters","resolve","history","pushState","stringify","Promise","dataKey","classifierSteps","some","newFilters","pathname","setSelectedTab","selectedTab","handleInfoClick","scrollIntoView","scrollToTable","openModal","closeModal","checkFirstVisit","localStorage","getItem","setItem","target","rel","addEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cc61cede.chunk.js","sourcesContent":["export const GEO_OPT_CENSUS    = \"tr10\";\nexport const GEO_OPT_ZIP_CODES = \"zip\";\nexport const GEO_OPT_ANCS      = \"anc12\";\nexport const GEO_OPT_PSAS      = \"psa12\";\nexport const GEO_OPT_WD12      = \"wd12\";\nexport const GEO_OPT_COUNTY    = \"cnty\";\nexport const GEO_OPT_CLUSTER   = \"cl17\";\n\nexport const GEO_LABEL_CENSUS    = \"Census Tracts\";\nexport const GEO_LABEL_ZIP_CODES = \"DC Zip Codes\";\nexport const GEO_LABEL_ANCS      = \"DC Advisory Neighboorhood Commissions\";\nexport const GEO_LABEL_PSAS      = \"DC Police Service Areas\";\nexport const GEO_LABEL_WD12      = \"DC Wards\";\nexport const GEO_LABEL_COUNTY    = \"Counties\";\nexport const GEO_LABEL_CLUSTER   = \"DC Neighborhood Clusters\";\n\nexport const geographies = {\n  [GEO_OPT_CENSUS]    : GEO_LABEL_CENSUS,\n  [GEO_OPT_COUNTY]    : GEO_LABEL_COUNTY,\n  [GEO_OPT_ANCS]      : GEO_LABEL_ANCS,\n  [GEO_OPT_CLUSTER]   : GEO_LABEL_CLUSTER,\n  [GEO_OPT_PSAS]      : GEO_LABEL_PSAS,\n  [GEO_OPT_WD12]      : GEO_LABEL_WD12,\n  [GEO_OPT_ZIP_CODES] : GEO_LABEL_ZIP_CODES,\n}\n\nexport const TOPIC_OPT_POPULATION = \"population\";\nexport const TOPIC_OPT_HOUSING    = \"housing\";\nexport const TOPIC_OPT_INCOME     = \"income\";\nexport const TOPIC_OPT_EDUCATION  = \"education\";\nexport const TOPIC_OPT_HEALTH     = \"health\";\nexport const TOPIC_OPT_SAFETY     = \"safety\";\nexport const TOPIC_OPT_EMPLOYMENT = \"employment\";\nexport const TOPIC_OPT_CONNECTION = \"connection\";\n\nexport const TOPIC_LABEL_POPULATION = \"Population\";\nexport const TOPIC_LABEL_HOUSING    = \"Housing\";\nexport const TOPIC_LABEL_INCOME     = \"Income\";\nexport const TOPIC_LABEL_EDUCATION  = \"Education\";\nexport const TOPIC_LABEL_HEALTH     = \"Health\";\nexport const TOPIC_LABEL_SAFETY     = \"Safety\";\nexport const TOPIC_LABEL_EMPLOYMENT = \"Employment\";\nexport const TOPIC_LABEL_CONNECTION = \"Connection\";\n\nexport const topics = {\n  [TOPIC_OPT_POPULATION] : TOPIC_LABEL_POPULATION,\n  [TOPIC_OPT_HOUSING]    : TOPIC_LABEL_HOUSING,\n  [TOPIC_OPT_INCOME]     : TOPIC_LABEL_INCOME,\n  [TOPIC_OPT_EDUCATION]  : TOPIC_LABEL_EDUCATION,\n  [TOPIC_OPT_HEALTH]     : TOPIC_LABEL_HEALTH,\n  [TOPIC_OPT_SAFETY]     : TOPIC_LABEL_SAFETY,\n  [TOPIC_OPT_EMPLOYMENT] : TOPIC_LABEL_EMPLOYMENT,\n  [TOPIC_OPT_CONNECTION] : TOPIC_LABEL_CONNECTION,\n}\n","export const INDICATORS_BLACKLIST = [\n  \"start_date\",\n  \"end_date\",\n  \"timeframe\",\n  \"indc\",\n  \"Anc2012\",\n  \"ANC2012\",\n  \"anc2012\",\n  \"City\",\n  \"Psa2012\",\n  \"PSA2012\",\n  \"psa2012\",\n  \"Geo2000\",\n  \"GEO2000\",\n  \"geo2000\",\n  \"Geo2010\",\n  \"GEO2010\",\n  \"geo2010\",\n  \"Ward2012\",\n  \"WARD2012\",\n  \"ward2012\",\n  \"Zip\",\n  \"ZIP\",\n  \"zip\",\n  \"county\",\n  \"COUNTY\",\n  \"ucounty\",\n  \"cluster2017\",\n  \"city\",\n];\n","import {\n  GEO_OPT_CENSUS,\n  GEO_OPT_ZIP_CODES,\n  GEO_OPT_ANCS,\n  GEO_OPT_PSAS,\n  GEO_OPT_CLUSTER,\n  topics,\n  geographies,\n} from \"../constants/taxonomy.js\";\n\nimport { INDICATORS_BLACKLIST } from \"../constants/filters.js\";\n\nexport const geographyOptions = Object.keys(geographies).map(key => ({ value: key, label: geographies[key] }));\n\nconst options = Object.keys(topics).map(key => ({ value: key, label: topics[key] }));\n\nexport const topicOptions = {\n  [GEO_OPT_CENSUS]: options,\n  [GEO_OPT_ANCS]: options,\n  [GEO_OPT_PSAS]: options,\n  [GEO_OPT_ZIP_CODES]: options,\n  [GEO_OPT_CLUSTER]: options,\n};\n\nexport const filterColumn = (column) => {\n  if (/(_m|_moe|_nf)$/i.test(column)) return false;\n\n  return !INDICATORS_BLACKLIST.includes(column);\n}\n","export const blueColorRamp = [\n  \"#cfe8f3\",\n  \"#a2d4ec\",\n  \"#73bfe2\",\n  \"#46abdb\",\n  \"#1696d2\",\n];\n\nexport const divergingColorRamp = [\n  \"#ca5800\",\n  \"#fdbf11\",\n  \"#fdd870\",\n  \"#fff2cf\",\n  \"#cfe8f3\",\n  \"#73bfe2\",\n  \"#1696d2\",\n  \"#0a4c6a\",\n];\n","import axios from \"axios\";\nimport sortedUniq from \"lodash.sorteduniq\";\nimport cloneDeep from \"lodash.clonedeep\";\n\nimport { filterColumn } from \"../helpers/filters\";\n\nimport {\n  blueColorRamp,\n} from \"../constants/colors\";\n\nimport {\n  GEO_OPT_CENSUS,\n  GEO_OPT_ZIP_CODES,\n  GEO_OPT_ANCS,\n  GEO_OPT_PSAS,\n  GEO_OPT_WD12,\n  GEO_OPT_COUNTY,\n  GEO_OPT_CLUSTER,\n} from \"../constants/taxonomy\";\n\nexport const dataSourceKey = (geography, topic) => (\n  `${geography}_${topic}`\n);\n\nexport const rowKey = (geography) => ({\n  [GEO_OPT_CENSUS]    : \"geo2010_nf\",\n  [GEO_OPT_ZIP_CODES] : \"zip_nf\",\n  [GEO_OPT_ANCS]      : \"anc2012_nf\",\n  [GEO_OPT_PSAS]      : \"psa2012_nf\",\n  [GEO_OPT_WD12]      : \"ward2012_nf\",\n  [GEO_OPT_COUNTY]    : \"county_nf\",\n  [GEO_OPT_CLUSTER]   : \"cluster2017_nf\",\n}[geography]);\n\n//\n// Data fetching\n//\nexport const fetchDataSource = (geography, topic) => {\n  const url = `/data/${topic}/${topic}_${geography}.json`;\n  return axios\n  .get(url)\n  .then(response => {\n    if (response.headers[\"content-type\"].match(/application\\/json/)) {\n      return response.data;\n    }\n    throw new Error(`Unable to fetch '${url}'`);\n  });\n};\n\nexport const fetchMetadataSource = (geography, topic) => {\n  const url = `/data/${topic}/${topic}_${geography}_metadata.json`\n  return axios\n  .get(url)\n  .then(response => {\n    if (response.headers[\"content-type\"].match(/application\\/json/)) {\n      return response.data;\n    }\n    throw new Error(`Unable to fetch '${url}'`);\n  });\n}\n\nexport const fetchFilters = () => {\n  return axios\n  .get(`/data/filters.json`)\n  .then(response => {\n    if (response.headers[\"content-type\"].match(/application\\/json/)) {\n      return response.data;\n    }\n    throw new Error(`Unable to fetch /data/filters.json`);\n  });\n}\n\nexport const fetchHelpText = () => {\n  return axios\n  .get(`/data/help-text.json`)\n  .then(response => {\n    if (response.headers[\"content-type\"].match(/application\\/json/)) {\n      return response.data;\n    }\n    throw new Error(`Unable to fetch /data/help-text.json`);\n  });\n}\n\n//\n// Filters\n//\nexport const indicatorLabel = (indicator, metadata) => metadata.find(e => e.NAME === indicator).LABEL;\n\nexport const indicators = (data, metadata) => {\n  if (!data || !metadata) return [];\n\n  return Object.keys(data[0])\n    .filter(filterColumn)\n    .reduce((all, indicator) => [ ...all, { value: indicator, label: indicatorLabel(indicator, metadata) }], []);\n};\n\nexport const years = (data) => {\n  if (!data) return [];\n\n  // return data\n  return sortedUniq(data.map(row => row.timeframe).sort())\n    .reduce((all, year) => [ ...all, { label: year, value: year } ], []);\n};\n\nexport const sortIndicators = (indicatorOptions, metadata) => {\n  if (!metadata) return [];\n\n  const sorted = cloneDeep(metadata)\n    .filter(({ NAME }) => filterColumn(NAME))\n    .sort((a,b) => a.weborder - b.weborder)\n    .map(({ NAME }) => indicatorOptions.find(({ value }) => value === NAME))\n    .filter(f => f);\n\n  return sorted;\n}\n\n//\n// Data table\n//\nexport const isNumeric = (n) => !isNaN(parseFloat(n)) && isFinite(n);\n\nexport const aggregates = (data, indicator, year) => {\n  if (!data || !indicator || !year) return {};\n\n  const values = data\n  .filter(row => row.timeframe === year && isNumeric(row[indicator]))\n  .map(row => row[indicator])\n\n  return {\n    min: Math.min(...values),\n    max: Math.max(...values),\n    avg: (values.reduce((total, val) => total + val, 0) / values.length).toFixed(2),\n  };\n}\n\nexport const csvSourceURL = (geography, topic) => `/data/${topic}/${topic}_${geography}.csv`;\n\n//\n// Choropleth\n//\nconst areaTransform = (geography, value) => ({\n  [GEO_OPT_CENSUS]: v => v.toString(),\n  [GEO_OPT_ZIP_CODES]: v => parseInt(v, 10),\n  [GEO_OPT_ANCS]: v => v.toString(),\n  [GEO_OPT_PSAS]: v => v.toString(),\n  [GEO_OPT_WD12]: v => parseInt(v, 10),\n  [GEO_OPT_COUNTY]: v => v.toString(),\n  [GEO_OPT_CLUSTER]: v => v.toString(),\n}[geography](value));\n\nexport const rowMOE = (row, indicator) => {\n  if (!row) return null;\n\n  const moe = row[`${indicator}_m`] || row[`${indicator}_MOE`];\n\n  return isNumeric(moe) ? formatNumber(moe) : null;\n}\n\nexport const choroplethRows = (data, geography, indicator, year) => {\n  if (!data || !geography || !indicator || !year) return [];\n\n  return data\n    .filter(row => row.timeframe === year && isNumeric(row[indicator]))\n    .map(row => ({\n      [rowKey(geography)]: areaTransform(geography, row[rowKey(geography)]),\n      [indicator]: row[indicator],\n      moe: row[`${indicator}_m`] || row[`${indicator}_MOE`],\n      indc: row.indc,\n    }));\n}\n\nexport const choroplethColorStops = (rows, steps, geography, indicator) => {\n  return rows.map(row => {\n    const bucket = steps.findIndex(step => row[indicator] <= step);\n    const color = bucket === -1 ? \"rgba(255,255,255,0)\" : blueColorRamp[bucket];\n\n    const stop = [ row[rowKey(geography)], color ];\n    return stop;\n  });\n}\n\n//\n// Map legend\n//\nexport const areaValue = (rows, area, geography, indicator, year) => {\n  if (!year || !area) return \"Select Year\";\n\n  const row = rows.find(r => r.timeframe === year && r[rowKey(geography)].toString() === area.toString());\n  const value = row && row[indicator];\n\n  return formatNumber(value);\n}\n\n//\n// Sources & Notes\n//\n// export const notesAndSourcesFor = (data, selectedFilters) => {\n//   if (!data) return {};\nexport const hasNotesAndSources = (data, level, item) => {\n  if (!data) return false;\n\n  return data.find(h => h.level === level && h.item === item);\n}\n\n//\n// Value formatting\n//\nexport const formatNumber = (value) => {\n  //if (!isNumeric(value) || !value.toString) return \"N/A\"+ (value);\n  // Having value at the end of the return string was resolving to \"N/ANaN or N/AInfinity\"\n  if (!isNumeric(value) || !value.toString) return \"N/A\";\n\n  // truncate to 2 decimal places to check if number is integer\n  //\n  // Number.isInteger(1000.00) => true\n  // Number.isInteger(1000.001) => false\n  const truncated = parseFloat(value.toString().replace(/(\\.\\d{2})\\d+$/, \"$1\"));\n\n  const number = Number.isInteger(truncated) ? parseInt(value) : parseFloat(value).toFixed(2)\n\n  if (!isNumeric(number)) return \"N/A\";\n\n  // add commas as thousands separator\n  // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n","import classnames from \"classnames\";\nimport ClickOutside from 'react-click-outside';\nimport map from \"lodash.map\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\n\nimport { sortIndicators, hasNotesAndSources } from \"../lib/data\";\n\nimport { geographyOptions } from \"../helpers/filters\";\n\nimport './Filters.scss'\nimport \"react-select/dist/react-select.css\";\n\nexport default class Filters extends Component {\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  state = {\n    tooltipLevel: null,\n    tooltipItem: null,\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  handleChange = (name) => (opt) => {\n    this.props.setFilter(name, (opt && opt.value));\n\n    if (name === \"indicator\" && opt && opt.value) {\n      window.setTimeout(() => {\n        const node = document.querySelector(`.data-table-row.${opt.value}`)\n        if (node) {\n          const scroller = document.querySelector(\".DataTable .scroller\");\n\n          scroller.scrollTop = node.offsetTop;\n        }\n      }, 10);\n    }\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  setTooltip = (tooltipLevel, tooltipItem) => this.setState({ tooltipLevel, tooltipItem });\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  renderOptions = (type) => (selectedOption) => {\n    return (\n      <div>\n        {hasNotesAndSources(this.props.notesAndSources, type, selectedOption.value) &&\n          <span\n            className=\"info-button\"\n            onClick={(ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              ev.stopImmediatePropagation();\n\n              if (this.state.tooltipLevel) {\n                this.setTooltip(null, null);\n              }\n              else {\n                this.setTooltip(type, selectedOption.value);\n              }\n            }}\n          >\n            &#x24d8;&nbsp;\n          </span>\n        }\n        <span>{selectedOption.label}</span>\n      </div>\n    );\n  }\n\n  render() {\n    const { tooltipLevel, tooltipItem } = this.state;\n    const { filters, selectedFilters, clearFilters, metadata, notesAndSources } = this.props;\n    const { geography, topic, indicator, year } = selectedFilters;\n    console.log(filters, selectedFilters, metadata, notesAndSources)\n    if (!filters) return null;\n\n    const tooltipCx = classnames(\"sources-and-notes-tooltip\", tooltipLevel, tooltipItem, {\n      visible: tooltipLevel !== null && tooltipItem !== null,\n    });\n    const tooltipContent = (notesAndSources.find(i => i.level === tooltipLevel && i.item === tooltipItem) || {}).text;\n\n    const topicOptions = geography\n      ? map(filters[geography].topics, ({ label, value }) => ({ label, value }))\n      : [];\n\n    const indicatorOptions = geography && topic\n      ? map(filters[geography].topics[topic].indicators, ({ label, value }) => ({ label, value }))\n      : [];\n\n    const yearOptions = geography && topic && indicator\n      ? filters[geography].topics[topic].indicators[indicator].years\n      : [];\n\n    return (\n      <div className=\"Filters\">\n        <ClickOutside onClickOutside={() => this.setTooltip(null, null)}>\n          <div\n            className={tooltipCx}\n            dangerouslySetInnerHTML={{__html: tooltipContent}}\n          />\n        </ClickOutside>\n\n        <div className=\"Filters-row\">\n          <Select\n            name=\"geography\"\n            onChange={this.handleChange(\"geography\")}\n            options={geographyOptions}\n            placeholder=\"Geography\"\n            value={geography}\n            valueRenderer={this.renderOptions(\"geography\")}\n            openOnClick={false}\n          />\n\n          <Select\n            disabled={!geography}\n            name=\"topic\"\n            onChange={this.handleChange(\"topic\")}\n            options={topicOptions}\n            placeholder={geography ? \"Topic\" : \"Please select geography\"}\n            value={topic}\n            valueRenderer={this.renderOptions(\"topic\")}\n            openOnClick={false}\n          />\n\n          <Select\n            disabled={!topic}\n            name=\"indicator\"\n            onChange={this.handleChange(\"indicator\")}\n            options={sortIndicators(indicatorOptions, metadata)}\n            placeholder={topic ? \"Indicator\" : \"Please select topic\"}\n            value={indicator}\n            valueRenderer={this.renderOptions(\"indicator\")}\n            openOnClick={false}\n          />\n\n          <Select\n            disabled={yearOptions.length === 0}\n            name=\"year\"\n            onChange={this.handleChange(\"year\")}\n            options={yearOptions}\n            placeholder={indicator ? \"Year\" : \"Please select Indicator\"}\n            value={year}\n            valueRenderer={this.renderOptions(\"year\")}\n          />\n        </div>\n\n        <div className=\"Filters-row right\">\n          <span className=\"Filters-reset-filters\" onClick={clearFilters} role=\"button\">Clear All</span>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import {\n  GEO_OPT_CENSUS,\n  GEO_OPT_ZIP_CODES,\n  GEO_OPT_ANCS,\n  GEO_OPT_PSAS,\n  GEO_OPT_WD12,\n  GEO_OPT_COUNTY,\n  // GEO_OPT_CITY,\n  GEO_OPT_CLUSTER,\n} from \"../constants/taxonomy.js\";\n\nexport const shapefile = (geography) => {\n  return {\n    [GEO_OPT_CENSUS]: \"mapbox://urbaninstitute.1xt6hznf\",\n    [GEO_OPT_ZIP_CODES]: \"mapbox://urbaninstitute.dvi7r97h\",\n    [GEO_OPT_ANCS]: \"mapbox://urbaninstitute.41px4aw0\",\n    [GEO_OPT_PSAS]: \"mapbox://urbaninstitute.7aqnlau8\",\n    [GEO_OPT_WD12]: \"mapbox://urbaninstitute.c2qlrj45\",\n    [GEO_OPT_COUNTY]: \"mapbox://urbaninstitute.0jr8fzld\",\n    // [GEO_OPT_CITY],\n    [GEO_OPT_CLUSTER]: \"mapbox://urbaninstitute.302mgn0d\",\n  }[geography];\n};\n\nexport const sourceLayer = (geography) => {\n  return {\n    [GEO_OPT_CENSUS]: \"DCMetroArea2015_tr10-04yamm\",\n    [GEO_OPT_ZIP_CODES]: \"zip-codes-5t51e9\",\n    [GEO_OPT_ANCS]: \"ANC12-bac55n\",\n    [GEO_OPT_PSAS]: \"PSA12-8baxgw\",\n    [GEO_OPT_WD12]: \"WD12-b4pj2o\",\n    [GEO_OPT_COUNTY]: \"County-bmf7rz\",\n    // [GEO_OPT_CITY],\n    [GEO_OPT_CLUSTER]: \"cluster-4r9zs3\",\n  }[geography];\n};\n\nexport const areaKey = (geography) => {\n  return {\n    [GEO_OPT_CENSUS]: \"GEOID\",\n    [GEO_OPT_ZIP_CODES]: \"ZIPCODE\",\n    [GEO_OPT_ANCS]: \"ANC_ID\",\n    [GEO_OPT_PSAS]: \"NAME\",\n    [GEO_OPT_WD12]: \"WARD\",\n    [GEO_OPT_COUNTY]: \"GEOID\",\n    // [GEO_OPT_CITY],\n    [GEO_OPT_CLUSTER]:\"NAME\",\n  }[geography];\n}\n","import {\n  GEO_OPT_CENSUS,\n  GEO_OPT_ZIP_CODES,\n  GEO_OPT_ANCS,\n  GEO_OPT_PSAS,\n  GEO_OPT_WD12,\n  GEO_OPT_COUNTY,\n  GEO_OPT_CLUSTER,\n} from \"../constants/taxonomy.js\";\n\nimport {\n  rowKey\n} from \"../lib/data.js\";\n\nexport const areaLabel = (geography, areaProps) => {\n  if (!geography || !areaProps) {\n    return `Please select ${!geography ? \"a geography \" : \"\"} ${!geography && !areaProps ? \"and \" : \"\"} ${!areaProps ? \"an area\" : \"\"}`;\n  }\n\n  switch (geography) {\n  case GEO_OPT_CENSUS:\n    return `Tract ${areaProps.TRACTCE.replace(/^0*/, \"\").match(/^(\\d*)(\\d{2})/).slice(1,3).join(\".\")}`;\n\n    case GEO_OPT_ZIP_CODES:\n      return `ZIP ${areaProps.ZIPCODE}`;\n\n  case GEO_OPT_CLUSTER:\n    return `${areaProps.NBH_NAMES}`;\n\n  case GEO_OPT_ANCS:\n  case GEO_OPT_WD12:\n    return areaProps.NAME;\n\n  case GEO_OPT_PSAS:\n    return `PSA ${areaProps.NAME}`;\n\n  case GEO_OPT_COUNTY:\n    return areaProps.NAME;\n\n  default:\n    return null;\n  }\n};\n\nexport const headerLabels = {\n  [GEO_OPT_CENSUS]: \"Tract\",\n  [GEO_OPT_ZIP_CODES]: \"Zip Code\",\n  [GEO_OPT_ANCS]: \"ANC\",\n  [GEO_OPT_PSAS]: \"PSA\",\n  [GEO_OPT_WD12]: \"Ward\",\n  [GEO_OPT_CLUSTER]: \"Neighborhood\",\n};\n\nexport const areaRows = (data, geography, area) => {\n  if (!data || !area) return [];\n\n  return data\n  .filter(row => row[rowKey(geography)].toString() === area.toString());\n}\n","import React, { Component } from \"react\";\nimport { func, object } from \"prop-types\";\nimport classnames from \"classnames\";\n\nimport Filters from './Filters';\n\nimport {\n  shapefile,\n  sourceLayer,\n  areaKey,\n} from \"../helpers/map\";\n\nimport {\n  areaLabel,\n} from \"../helpers/data_table\";\n\nimport {\n  indicatorLabel,\n  formatNumber,\n  areaValue,\n} from \"../lib/data\";\n\nimport {\n  blueColorRamp,\n} from \"../constants/colors\";\n\nimport {\n  geographies,\n} from \"../constants/taxonomy\";\n\nimport './Map.scss'\n\n// in order, add the following layers:\n//\n// invisible areas for hover events\n// hover indicator\n// selected area\n// choropleth (only visible when an indicator is selected)\n// area lines\nconst layers = (geography) => ([\n  { id: `${geography}-fills`, type: \"fill\", paint: { \"fill-opacity\": 0, \"fill-color\": \"#ffffff\" } },\n  { id: `${geography}-choropleth`, type: \"fill\", paint: { \"fill-opacity\": 0.7 }, layout: { visibility: \"none\" } },\n  { id: `${geography}-hover`, type: \"fill\", paint: { \"fill-opacity\": 0.4, \"fill-color\": \"#fbb755\" }, filter: [ \"==\", areaKey(geography), \"\" ] },\n  { id: `${geography}-selected`, type: \"fill\", paint: { \"fill-opacity\": 0.7, \"fill-color\": \"#fbb755\" }, filter: [ \"==\", areaKey(geography), \"\" ] },\n  { id: `${geography}-lines`, type: \"line\", paint: { \"line-width\": 1, \"line-color\": \"rgba(0, 0, 0, 0.4)\" } },\n]);\n\nexport default class Map extends Component {\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  static propTypes = {\n    onLoad: func.isRequired,\n    selectedFilters: object,\n    setArea: func.isRequired,\n    toggleAreaLock: func.isRequired,\n    data: object,\n    metadata: object,\n    onAboutAppClick: func.isRequired,\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  state = {\n    sources: [],\n    choropleths: {},\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  loadedSources = [];\n\n  componentDidMount() {\n    const { mapboxgl } = window;\n\n    mapboxgl.accessToken = \"pk.eyJ1IjoidXJiYW5pbnN0aXR1dGUiLCJhIjoiTEJUbmNDcyJ9.mbuZTy4hI_PWXw3C3UFbDQ\";\n    this.map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v9\",\n      center: [ -77.0675577, 38.890812 ],\n      zoom: 11,\n    });\n\n    this.map.scrollZoom.disable();\n    this.map.addControl(new mapboxgl.NavigationControl({ showCompass: false }));\n\n    this.map.on(\"load\", this.props.onLoad);\n    this.map.on(\"data\", this.handleMapData);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { geography: oldGeography, indicator: oldIndicator, year: oldYear } = this.props.selectedFilters;\n    const { selectedFilters: { geography, indicator, year }, choroplethColorStops } = nextProps;\n\n    // geography chosen\n    if (geography && geography !== oldGeography) {\n      if (this.loadedSources.includes(geography)) {\n        this.makeSourceVisible(geography)\n      }\n      else {\n        this.addSource(geography);\n      }\n    }\n\n    // geography cleared\n    if (!geography && geography !== oldGeography) {\n      this.makeSourceVisible(null);\n    }\n\n    // indicator chosen or year changed\n    if (\n      (indicator && indicator !== oldIndicator && this.loadedSources.includes(geography)) ||\n      (year && year !== oldYear && this.loadedSources.includes(geography))\n    ) {\n      this.setChoropleth(geography, choroplethColorStops);\n    }\n\n    // year cleared\n    if (!year && year !== oldYear && this.loadedSources.includes(geography)) {\n      this.clearChoropleth(geography);\n    }\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  addSource = (geography) => {\n    const url = shapefile(geography);\n    if (!url) {\n      throw new Error(`invalid geography: ${geography}`);\n    }\n\n    this.map.addSource(geography, {\n      type: \"vector\",\n      url,\n    });\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  addLayers = (geography) => {\n    layers(geography).forEach(layer => {\n      this.map.addLayer({\n        ...layer,\n        ...{\n          source: geography,\n          \"source-layer\": sourceLayer(geography),\n        },\n      })\n    });\n\n    // select area\n    this.map.on(\"click\", `${geography}-fills`, (ev) => {\n      const { areaLocked, area, toggleAreaLock } = this.props;\n      const newArea = ev.features[0].properties[areaKey(geography)];\n\n      if (area !== newArea) {\n        this.setArea(geography, ev);\n        if (!areaLocked) toggleAreaLock();\n      } else {\n        toggleAreaLock();\n      }\n    })\n\n    // show hide current area on mousemove / leave\n    this.map.on(\"mousemove\", `${geography}-fills`, (ev) => {\n      if (this.props.areaLocked) return;\n      this.setArea(geography, ev);\n    });\n\n    this.map.on(\"mouseleave\", `${geography}-fills`, () => {\n      if (this.props.areaLocked) return;\n\n      const key = areaKey(geography);\n      this.map.setFilter(`${geography}-hover`, [\"==\", key, \"\"]);\n    });\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  setArea = (geography, ev) => {\n    const key = areaKey(geography);\n    const newAreaProps = ev.features[0].properties;\n    const newArea = newAreaProps[key];\n\n    this.map.setFilter(`${geography}-hover`, [\"==\", key, ev.features[0].properties[key]]);\n    this.props.setArea(newArea, newAreaProps);\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  setChoropleth = (geography, colorStops) => {\n    if (!geography || colorStops.length === 0) return;\n\n    this.map.setPaintProperty(`${geography}-choropleth`, \"fill-color\", {\n      property: areaKey(geography),\n      type: \"categorical\",\n      stops: colorStops,\n      default: \"rgba(255, 255, 255, 0)\",\n    });\n    this.map.setLayoutProperty(`${geography}-choropleth`, \"visibility\", \"visible\");\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  clearChoropleth = (geography) => {\n    if (!geography) return;\n    this.map.setLayoutProperty(`${geography}-choropleth`, \"visibility\", \"none\");\n  }\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  makeSourceVisible = (geography) => {\n    this.loadedSources.forEach(source => {\n      [ \"lines\", \"fills\", \"choropleth\" ].forEach(layer => {\n        this.map.setLayoutProperty(`${source}-${layer}`, \"visibility\", \"none\");\n      })\n    });\n\n    if (!geography) return;\n\n    [ \"lines\", \"fills\" ].forEach(layer => {\n      this.map.setLayoutProperty(`${geography}-${layer}`, \"visibility\", \"visible\");\n    });\n  }\n\n  handleMapData = (ev) => {\n    if (!ev.sourceId) return;\n    if (this.loadedSources.includes(ev.sourceId) || !geographies.hasOwnProperty(ev.sourceId)) return;\n\n    if (ev.isSourceLoaded) {\n      this.loadedSources.push(ev.sourceId);\n      this.addLayers(ev.sourceId);\n      this.makeSourceVisible(ev.sourceId);\n\n      if (this.props.indicator || this.props.year) {\n        this.setChoropleth(this.props.geography, this.props.choroplethColorStops);\n      }\n    }\n  }\n\n  render() {\n    const {\n      area, areaProps,\n      choroplethSteps,\n      clearFilters,\n      data,\n      filters,\n      metadata,\n      selectedFilters,\n      selectedFilters: { geography, indicator, year },\n      setFilter,\n      notesAndSources,\n      onAboutAppClick,\n    } = this.props;\n\n    const stepsCount = indicator && year\n      ? choroplethSteps.length\n      : 0;\n\n    const largeValues = indicator && year\n      ? parseInt(choroplethSteps[stepsCount - 1]).toString().length * stepsCount > 20\n      : false;\n\n    const legendCx = classnames(\"Map-legend\", {\n      \"large-values\": largeValues,\n    });\n\n    return (\n      <div className=\"Map\">\n        <div id=\"map\" style={{height: 'calc(100vh + 50px)'}}>\n          <div className=\"container\">\n            <Filters\n              filters={filters}\n              selectedFilters={selectedFilters}\n              setFilter={setFilter}\n              clearFilters={clearFilters}\n              data={data}\n              metadata={metadata}\n              notesAndSources={notesAndSources}\n              onInfoClick={this.props.onInfoClick}\n            />\n\n            <div className={legendCx}>\n              <small>{indicator ? (indicator && metadata && indicatorLabel(indicator, metadata)) : \"Select an Indicator\"}</small>\n              <dl>\n                <dt>\n                  <h3 className=\"h4\">{area ? areaLabel(geography, areaProps) : \"Hover area (click to lock)\"}</h3>\n                </dt>\n                <dd>{areaValue(data, area, geography, indicator, year)}</dd>\n              </dl>\n              {indicator && year && (\n                <ul className=\"Map-key\">\n                  {choroplethSteps.map((_, step) => (\n                    <li key={step}>\n                      <span className=\"key-values\">≤ {formatNumber(choroplethSteps[step])}</span>\n                      <span className=\"color\" style={{ backgroundColor: blueColorRamp[step] }} />\n                    </li>\n\n                  ))}\n                </ul>\n              )}\n\n              <span className=\"Map-legend-about-app\" onClick={onAboutAppClick} role=\"button\">About this app</span>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","/* eslint-disable no-console */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nimport {\n  topics,\n} from \"../constants/taxonomy\";\n\nimport {\n  areaLabel,\n  areaRows,\n  headerLabels,\n} from \"../helpers/data_table\";\n\nimport {\n  indicators,\n  years,\n  aggregates,\n  csvSourceURL,\n  formatNumber,\n  rowMOE,\n  hasNotesAndSources,\n} from \"../lib/data\";\n\nimport './DataTable.scss'\n\nexport default class DataTable extends Component {\n\n  // https://github.com/babel/babel-eslint/issues/487\n  // eslint-disable-next-line no-undef\n  static propTypes = {\n    selectedFilters: PropTypes.object.isRequired,\n    area: PropTypes.string,\n    areaProps: PropTypes.object,\n    data: PropTypes.array,\n    metadata: PropTypes.object,\n    notesAndSources: PropTypes.shape({\n      geography: PropTypes.string,\n      topic: PropTypes.string,\n      indicator: PropTypes.string,\n    }),\n    selectedTab: PropTypes.string,\n  }\n\n  componentDidUpdate() {\n    const { selectedFilters: { indicator } } = this.props;\n\n    const node = document.querySelector(`.DataTable tbody tr.data-table-row.${indicator}`);\n    const scroller = document.querySelector(\".DataTable .scroller\");\n\n    if (node && scroller) scroller.scrollTop = node.offsetTop - 45;\n  }\n\n  render() {\n    const {\n      selectedFilters: { geography, topic, indicator, year },\n      area, areaProps, data, metadata, notesAndSources,\n    } = this.props;\n\n    const canShowData = !!(geography && topic);\n    const geographyType = headerLabels[geography];\n\n    const rows = [];\n    indicators(data, metadata).forEach(({ value: currentIndicator, label }) => {\n      const areaValues = areaRows(data, geography, area);\n      //console.warn(`label = '${label}'`)\n\n      const selectedYears = year ? [ { value: year } ] : years(data);\n\n      selectedYears.forEach(({ value: currentYear }) => {\n        const aggs = aggregates(data, currentIndicator, currentYear);\n        const cx = classnames(\"data-table-row\", currentIndicator, {\n          highlight: currentIndicator === indicator,\n        });\n\n        const row = area && areaValues.length > 0\n          ? areaValues.find(r => r.timeframe === currentYear)\n          : {};\n\n        const areaValue = row && row[currentIndicator];\n        const marginOfError = rowMOE(row, currentIndicator);\n\n        // console.log('areaValue:[]' + areaValue+']');\n        if(areaValue !== \"N/A\" && areaValue !== \".\" && areaValue !== \"X\") {\n          rows.push(\n            <tr key={`${currentIndicator}-${currentYear}`} className={cx}>\n              <td className=\"title\">{label}, {currentYear}</td>\n              <td>\n                <span>{area && formatNumber(areaValue)}</span>\n                <span className=\"moe\">{marginOfError && `±${marginOfError}`}</span>\n              </td>\n              <td>{formatNumber(aggs.avg)}</td>\n              <td className=\"hide-for-mobile\">{formatNumber(aggs.min)}</td>\n              <td className=\"hide-for-mobile\">{formatNumber(aggs.max)}</td>\n            </tr>\n          );\n        }\n      });\n\n      rows.push(\n        <tr className=\"separator\" key={`${currentIndicator}-separator`}>\n          <td colSpan=\"5\" class=\"separator\" />\n        </tr>\n      );\n    });\n\n    const downloadURL = csvSourceURL(geography, topic);\n    const downloadName = downloadURL.match(/\\/([\\w\\d_\\-.]+)$/)[1];\n\n    return (\n      <div className=\"container data-table-container\">\n\n        {!canShowData &&\n          <div className=\"DataTable DataTable-empty\">\n            <span>Data you can trust about Greater DC communities.</span>\n          </div>\n        }\n\n        {canShowData &&\n          <div className=\"DataTable\">\n            <div className=\"scroller\" ref={ref => this.scroller = ref}>\n              <table>\n                <thead>\n                  <tr>\n                    <th>&nbsp;</th>\n                    <th>{areaLabel(geography, areaProps)}</th>\n                    <th className=\"text-center\" colSpan=\"3\">{geographyType ? `All ${geographyType}s` : \"Please select a geography\"}</th>\n                  </tr>\n                  <tr>\n                    <th colSpan=\"2\" />\n                    <th>\n                      {hasNotesAndSources(notesAndSources, \"general\", \"average\") &&\n                        <span className=\"info-button\" onClick={() => this.props.onInfoClick(\"general\", \"average\")}>&#x24d8;&nbsp;</span>\n                      }\n                      Average\n                    </th>\n                    <th className=\"hide-for-mobile\">\n                      {hasNotesAndSources(notesAndSources, \"general\", \"low\") &&\n                        <span className=\"info-button\" onClick={() => this.props.onInfoClick(\"general\", \"low\")}>&#x24d8;&nbsp;</span>\n                      }\n                      Low\n                    </th>\n                    <th className=\"hide-for-mobile\">\n                      {hasNotesAndSources(notesAndSources, \"general\", \"high\") &&\n                        <span className=\"info-button\" onClick={() => this.props.onInfoClick(\"general\", \"high\")}>&#x24d8;&nbsp;</span>\n                      }\n                      High\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td colSpan=\"5\" className=\"indicator\">\n                      {topics[topic] || \"Please select a topic\"}\n                    </td>\n                  </tr>\n\n                  {rows}\n\n                </tbody>\n              </table>\n            </div>\n            <a className=\"button data-download-button\" href={downloadURL} download={downloadName} role=\"button\">Download Data</a>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\n\nimport './Modal.scss'\n\nexport default class Modal extends Component {\n  render() {\n    const { children, isOpen, onRequestClose } = this.props;\n\n    const overlayCx = classnames(\"Modal-overlay\", { visible: isOpen });\n    const modalCx = classnames(\"Modal\", { visible: isOpen });\n\n    return (\n      <div className={overlayCx} onClick={onRequestClose}>\n        <div className={modalCx}>\n          <button onClick={onRequestClose}>✖</button>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n","import sortedUniq from \"lodash.sorteduniq\";\nimport compact from 'lodash.compact'\n\nconst times = (n) => Array.from(Array(n)).map((_, i) => i);\n\nexport const equalIntervals = (values, steps = 5) => {\n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  const inc = (max - min) / steps;\n\n  // 0.001 is added to account for rounding errors on the highest values\n  return times(steps).reduce((all, i) => [ ...all, ((i + 1) * inc) + min + 0.001 ], []);\n};\n\nexport const quantileIntervals = (values, steps = 5) => {\n  // Have to remove undefined values or this breaks\n  const compactedValues = compact(values);\n  const perBucket = Math.floor(compactedValues.length / steps);\n  const sortedValues = [ ...compactedValues ].sort((a,b) => a - b);\n  const intervals = times(steps)\n    .reduce((all, i) => [ ...all, sortedValues[perBucket + i*perBucket - 1]], []);\n\n  intervals[intervals.length - 1] = sortedValues[sortedValues.length - 1];\n\n  return sortedUniq(intervals);\n}\n","import React, { Component } from \"react\";\nimport qs from \"query-string\";\nimport Promise from \"bluebird\";\nimport some from \"lodash.some\";\n\nimport Map from \"./components/Map\";\nimport DataTable from \"./components/DataTable\";\nimport Modal from \"./components/Modal\";\n\nimport {\n  dataSourceKey,\n  fetchDataSource,\n  fetchMetadataSource,\n\n  fetchFilters,\n  fetchHelpText,\n\n  choroplethRows,\n  choroplethColorStops,\n} from \"./lib/data\";\n\nimport {\n  quantileIntervals,\n} from \"./lib/classifiers\";\n\nimport './App.scss'\n\nconst filterObject = (obj, predicate) => {\n  return Object.keys(obj).reduce((all, key) => (\n    predicate(obj[key]) ? { ...all, [key]: obj[key] } : all\n  ), {});\n};\n\nconst HAS_VISITED = \"gdc-has-visted\";\n\nexport default class App extends Component {\n\n  state = {\n    selectedFilters: {\n      geography: null,\n      topic: null,\n      indicator: null,\n      year: null,\n    },\n    filters: null,\n    area: null,\n    areaProps: null,\n    areaLocked: false,\n    dataSources: {},\n    metadataSources: {},\n    notesAndSources: [],\n    choroplethSteps: [],\n    choroplethColorStops: [],\n    modalOpen: false,\n\n  }\n\n  componentDidMount() {\n    this.checkFirstVisit();\n    fetchFilters().then(filters => this.setState({ filters }));\n    fetchHelpText().then(notesAndSources => this.setState({ notesAndSources }));\n  }\n\n  checkFirstVisit() {\n    if (window.localStorage.getItem(HAS_VISITED) === null) {\n      window.localStorage.setItem(HAS_VISITED, true);\n      this.setState({ modalOpen: true});\n    }\n  }\n\n  setSelectedFiltersFromQueryString = () => {\n    const selectedFilters = qs.parse(window.location.search);\n    const { geography, topic, indicator, year } = selectedFilters;\n\n    this\n    .setFilter(\"geography\", geography)\n    .then(() => { if (topic) return this.setFilter(\"topic\", topic); })\n    .then(() => { if (indicator) return this.setFilter(\"indicator\", indicator); })\n    .then(() => { if (year) return this.setFilter(\"year\", year); })\n    .catch(e => { throw new Error(`error in setSelectedFiltersFromQueryString chain ${e.message}`); });\n  }\n\n  setSearchFromFilters = (resolve = () => {}) => () => {\n    const search = filterObject(this.state.selectedFilters, v => !!v);\n    window.history.pushState({}, null, \"?\" + qs.stringify(search));\n\n    return resolve();\n  }\n\n  setFilter = (filter, value) => {\n    return new Promise(resolve => {\n\n      // when clearing geography, clear every other filter and area\n      if (filter === \"geography\" && !value) {\n        this.clearFilters();\n        this.setArea(null, null);\n\n        this.setSearchFromFilters(resolve);\n        return;\n      }\n\n      // when clearing other values\n      if (value === null) {\n        let selectedFilters = { ...this.state.selectedFilters };\n        switch (filter) {\n        case \"topic\":\n          selectedFilters = { ...selectedFilters, topic: null, indicator: null, year: null };\n          break;\n        case \"indicator\":\n          selectedFilters = { ...selectedFilters, indicator: null, year: null };\n          break;\n        case \"year\":\n          selectedFilters = { ...selectedFilters, year: null };\n          break;\n        default:\n        }\n\n        return this.setState({\n          selectedFilters,\n          choroplethSteps: [],\n          choroplethColorStops: [],\n        }, this.setSearchFromFilters(resolve));\n      }\n\n      // if changing geography, invalidate selected area and filters\n      if (filter === \"geography\" && value !== this.state.selectedFilters.geography) {\n        this.setState({\n          selectedFilters: { geography: value, topic: null, indicator: null, year: null },\n          area: null,\n          areaProps: null,\n        }, this.setSearchFromFilters(resolve));\n      }\n\n      // change topic\n      if (filter === \"topic\") {\n        const { selectedFilters: { geography }, dataSources } = this.state;\n        const dataKey = dataSourceKey(geography, value);\n\n        if (!dataSources[dataKey]) {\n          return Promise.all([\n            fetchDataSource(geography, value),\n            fetchMetadataSource(geography, value),\n          ])\n          .then(([ data, metadata ]) => {\n            const { dataSources, metadataSources, selectedFilters: { geography } } = this.state;\n\n            return this.setState({\n              dataSources: { ...dataSources, [dataKey]: data },\n              metadataSources: { ...metadataSources, [dataKey]: metadata },\n              selectedFilters: { geography, topic: value, indicator: null, year: null },\n            }, this.setSearchFromFilters(resolve));\n          });\n        }\n        else {\n          return this.setState({\n            selectedFilters: { geography, topic: value, indicator: null, year: null },\n          }, this.setSearchFromFilters(resolve));\n        }\n      }\n\n      // calculate choropleth data if indicator / year changes\n      if (filter === \"indicator\" || filter === \"year\") {\n        const { filters, selectedFilters, selectedFilters: { geography, topic } } = this.state;\n        const indicator = filter === \"indicator\" ? value : selectedFilters.indicator;\n        const year = filter === \"year\"\n          ? value\n          : filters[geography].topics[topic].indicators[value].years[0].value;\n\n        const dataKey = dataSourceKey(geography, topic);\n        const data = this.state.dataSources[dataKey];\n\n        const rows = choroplethRows(data, geography, indicator, year);\n        const classifierSteps = some(rows, r => r.indc ? r.indc === 0 : true) ? 5 : 4;\n        const steps = quantileIntervals(rows.map(row => row[indicator]), classifierSteps)\n\n        const colorStops = choroplethColorStops(rows, steps, geography, indicator);\n\n        const newFilters = filter === \"indicator\"\n          ? { indicator: value, year }\n          : { year: value };\n\n        return this.setState({\n          choroplethSteps: steps,\n          choroplethColorStops: colorStops,\n          selectedFilters: { ...this.state.selectedFilters, ...newFilters },\n        }, this.setSearchFromFilters(resolve));\n      }\n\n    });\n  }\n\n  clearFilters = () => {\n    this.setState({\n      selectedFilters: {\n        geography: null,\n        topic: null,\n        indicator: null,\n        year: null,\n      },\n    }, () => {\n      window.history.pushState({}, null, window.location.pathname);\n    });\n  }\n\n  setArea = (area, areaProps) => {\n    this.setState({ area, areaProps });\n  }\n\n  toggleAreaLock = () => {\n    this.setState({ areaLocked: !this.state.areaLocked });\n  }\n\n  setSelectedTab = (selectedTab) => this.setState({ selectedTab });\n\n  handleInfoClick = (level, item) => {\n    if (this.state.notesAndSources.length === 0) return;\n\n    this.setState({ selectedTab: \"notes\" }, () => {\n      const node = document.querySelector(`#${level}-${item}`);\n\n      if (node) node.scrollIntoView();\n    });\n  }\n\n  scrollToTable = () => {\n    document.querySelector(\".DataTable\").scrollIntoView();\n  }\n\n  openModal = () => this.setState({ modalOpen: true });\n  closeModal = () => this.setState({ modalOpen: false });\n\n  render() {\n    const {\n      filters,\n      selectedFilters, selectedFilters: { geography, topic },\n      area, areaProps, areaLocked,\n      dataSources, metadataSources, notesAndSources,\n      choroplethSteps, choroplethColorStops,\n      selectedTab,\n      modalOpen,\n    } = this.state;\n    const dataKey = dataSourceKey(geography, topic);\n    const data = dataSources[dataKey];\n    const metadata = metadataSources[dataKey];\n\n    return (\n      <div className=\"greater-dc-data-explorer\">\n        <div className=\"App\">\n          <Map\n            area={area}\n            areaProps={areaProps}\n            areaLocked={areaLocked}\n            choroplethColorStops={choroplethColorStops}\n            choroplethSteps={choroplethSteps}\n            clearFilters={this.clearFilters}\n            data={data}\n            filters={filters}\n            metadata={metadata}\n            notesAndSources={notesAndSources}\n            onLoad={this.setSelectedFiltersFromQueryString}\n            selectedFilters={selectedFilters}\n            setArea={this.setArea}\n            toggleAreaLock={this.toggleAreaLock}\n            setFilter={this.setFilter}\n            onInfoClick={this.handleInfoClick}\n            onAboutAppClick={this.openModal}\n          />\n\n          <button className=\"scroll-to-table\" onClick={this.scrollToTable}>\n            Scroll to table\n          </button>\n\n          <DataTable\n            selectedFilters={selectedFilters}\n            area={area}\n            areaProps={areaProps}\n            data={data}\n            metadata={metadata}\n            notesAndSources={notesAndSources}\n            selectedTab={selectedTab}\n            setSelectedTab={this.setSelectedTab}\n            onInfoClick={this.handleInfoClick}\n          />\n\n          <Modal isOpen={modalOpen} onRequestClose={this.closeModal}>\n            <h2>Welcome to the Urban–Greater DC Data Explorer</h2>\n            <p> This interactive map allows you to see data related to education, jobs, basic needs, affordable housing, health, and more across the region. We will add additional data and functionality in the coming months, including more regional data on these topics.</p>\n            <p> Click <a\n                href=\"https://greaterdc.urban.org/sites/default/files/2018-05/UrbanGreaterDCMethodology.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >here</a> to download the Data Explorer methodology and notes documentation.</p>\n            <p>If there are data you would like to see added to the explorer, please let us know at <a href=\"mailto:greaterdc@urban.org\">greaterdc@urban.org</a>.</p>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  ReactDOM.render(<App />, document.getElementById('app'));\n})\n"],"sourceRoot":""}